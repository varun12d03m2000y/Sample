CREATE OR REPLACE PROCEDURE check_format_issues()
BEGIN
    DECLARE table_names ARRAY<STRING>;
    DECLARE mdn_cols ARRAY<STRING>;
    DECLARE imei_cols ARRAY<STRING>;
    DECLARE imsi_cols ARRAY<STRING>;
    DECLARE table_name STRING;
    DECLARE mdn_col STRING;
    DECLARE imei_col STRING;
    DECLARE imsi_col STRING;
    DECLARE i INT64 DEFAULT 0;

    -- Table names
    SET table_names = [
        '`your_project.your_dataset.fwa_mdn_health_check_dly_raw_v1`',
        '`your_project.your_dataset.fwa_sha_owlhistory_raw_v1`',
        '`your_project.your_dataset.fwa_active_customer_performance_daily_norm`',
        '`your_project.your_dataset.fixed_fwa_subscriber_fact`',
        '`your_project.your_dataset.fixed_5g_dvc_detail`',
        '`your_project.your_dataset.customer_usage_hourly_norm`',
        '`your_project.your_dataset.fixed_fwa_ga_de_summary_fact`',
        '`your_project.your_dataset.fwa_combined_inventory_full`',
        '`your_project.your_dataset.fwa_qes_scores`',
        '`your_project.your_dataset.ntwk_nqes_score_model_scores_32`'
    ];

    -- MDN column names (use NULL for tables without MDN)
    SET mdn_cols = ['mdn', 'mdn', 'mdn', 'mtn', 'mtn', 'mtn', 'mtn', 'mdn', NULL, NULL];

    -- IMEI column names (use NULL for tables without IMEI)
    SET imei_cols = ['imei', 'imei', 'imei', 'imei', NULL, NULL, 'imei', 'imei', NULL, NULL];

    -- IMSI column names (use NULL for tables without IMSI)
    SET imsi_cols = ['imsi', 'imsi', 'imsi', 'vzw_imsi', NULL, 'imsi', 'vzw_imsi', 'imsi', 'imsi', 'imsi'];

    -- Loop through each table
    WHILE i < ARRAY_LENGTH(table_names) DO
        SET table_name = table_names[OFFSET(i)];
        SET mdn_col = mdn_cols[OFFSET(i)];
        SET imei_col = imei_cols[OFFSET(i)];
        SET imsi_col = imsi_cols[OFFSET(i)];

        -- Check MDN if column exists
        IF mdn_col IS NOT NULL THEN
            EXECUTE IMMEDIATE FORMAT("""
                INSERT INTO `your_project.your_dataset.format_issues_summary`
                SELECT '%s' AS table_name, '%s' AS column_name, 
                    'Invalid Length' AS issue_type, COUNT(*) AS issue_count, CURRENT_TIMESTAMP()
                FROM %s
                WHERE LENGTH(%s) NOT IN (10, 11, 12)
                UNION ALL
                SELECT '%s', '%s', 
                    'Empty Value', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE TRIM(%s) = ''
                UNION ALL
                SELECT '%s', '%s', 
                    'Contains Hyphen', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE %s LIKE '%%-%%'
            """, table_name, mdn_col, table_name, mdn_col,
                 table_name, mdn_col, table_name, mdn_col,
                 table_name, mdn_col, table_name, mdn_col);
        END IF;

        -- Check IMEI if column exists
        IF imei_col IS NOT NULL THEN
            EXECUTE IMMEDIATE FORMAT("""
                INSERT INTO `your_project.your_dataset.format_issues_summary`
                SELECT '%s', '%s', 
                    'Empty Value', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE TRIM(%s) = ''
                UNION ALL
                SELECT '%s', '%s', 
                    'Contains Hyphen', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE %s LIKE '%%-%%'
            """, table_name, imei_col, table_name, imei_col,
                 table_name, imei_col, table_name, imei_col);
        END IF;

        -- Check IMSI if column exists
        IF imsi_col IS NOT NULL THEN
            EXECUTE IMMEDIATE FORMAT("""
                INSERT INTO `your_project.your_dataset.format_issues_summary`
                SELECT '%s', '%s', 
                    'Empty Value', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE TRIM(%s) = ''
                UNION ALL
                SELECT '%s', '%s', 
                    'Contains Hyphen', COUNT(*), CURRENT_TIMESTAMP()
                FROM %s
                WHERE %s LIKE '%%-%%'
            """, table_name, imsi_col, table_name, imsi_col,
                 table_name, imsi_col, table_name, imsi_col);
        END IF;

        -- Move to the next table
        SET i = i + 1;
    END WHILE;

END;
